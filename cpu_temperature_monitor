import threading
import time
import psutil

# Function to retrieve the current CPU temperature
def get_temperature():
    try:  # Try to get the temperature data from psutil
        temperature_data = psutil.sensors_temperatures()
        if '_coretemp' in temperature_data:
            # Return the current temperature of the coretemp sensor
            return temperature_data['_coretemp'][0].current
        else:
            print("Error: Temperature data not found.")
            return None
    except Exception as e:  # Catch any exceptions that may occur during temperature data retrieval
        print(f"Error: {e}")
        return None

# Function to continuously monitor the CPU temperature
def monitor_temperature():
    while True:
        temp = get_temperature()
        if temp:
            print(f"CPU Temperature: {temp}Â°C")
        time.sleep(5)  # Wait for 5 seconds before checking for temperature updates again

# Main function to initialize the temperature monitoring thread
def main():
    try:  # Try to create and start the monitoring thread
        monitor_thread = threading.Thread(target=monitor_temperature)
        monitor_thread.start()
    except Exception as e:  # Catch any exceptions that may occur during thread creation
        print(f"Error: {e}")

# Check if this script is being run directly (not being imported as a module)
if __name__ == "__main__":
    main()
